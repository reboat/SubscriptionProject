apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'com.jakewharton.butterknife'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.android.support:recyclerview-v7:25.3.1'

    compile 'com.jakewharton:butterknife:8.6.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.6.0'

    testCompile 'junit:junit:4.12'
}

//上传AAR、source、JavaDoc脚本
uploadArchives {
    repositories {
        //配置仓库地址和模块相关信息
        mavenDeployer {
            snapshotRepository(url: 'http://10.100.47.176:8086/nexus/content/repositories/snapshots') {
                authentication(userName: 'deployment', password: 'deployment123')
            }
            repository(url: 'http://10.100.47.176:8086/nexus/content/repositories/releases') {
                authentication(userName: 'deployment', password: 'deployment123')
            }
            pom.project {
                version '0.0.1-SNAPSHOT'
                artifactId 'subscription'
                groupId 'cn.daily.android'
                packaging 'aar'
                description 'subscription lib'
            }
        }

        //创建javadoc的任务
        task javadoc(type: Javadoc) {
            source = android.sourceSets.main.java.srcDirs
            classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
            destinationDir = file("../javadoc/")
            failOnError false
        }

        task javadocJar(type: Jar, dependsOn: javadoc) {
            classifier = 'javadoc'
            from javadoc.destinationDir
        }

        //创建源文件任务
        task androidSourcesJar(type: Jar) {
            classifier = 'sources'
            from android.sourceSets.main.java.srcDirs
        }

        //上传文件
        artifacts {
            archives file('subscription.aar')
            archives androidSourcesJar
            archives javadocJar
        }
    }
}